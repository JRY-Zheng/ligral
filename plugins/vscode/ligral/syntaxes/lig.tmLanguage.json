{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ligral",
	"foldingStartMarker": "^route\\s.*",
	"foldingStopMarker": "^\\s*end",
	"patterns": [
		{
			"include": "#routes"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#single-strings"
		},
		{
			"include": "#digits"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#block-comments"
		},
		{
			"include": "#inline-comments"
		},
		{
			"include": "#line-comments"
		},
		{
			"include": "#assign-clause"
		},
		{
			"include": "#block"
		},
		{
			"include": "#configuration"
		},
		{
			"include": "#matrices"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.lig",
				"match": "\\b(digit|route|end|import|using|conf|let)\\b"
			}]
		},
		"operators": {
			"patterns": [{
				"name": "keyword.operator.lig",
				"match": "\\+|->?|\\*|/|\\^|=|<-|,|;"
			}]
		},
		"digits": {
			"patterns": [{
				"name": "constant.numeric.lig",
				"match": "\\b\\d+(\\.\\d+)?\\b"
			}]
		},
		"booleans": {
			"patterns": [{
				"name": "constant.language.lig",
				"match": "\\b(true|false)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.lig",
			"begin": "\"",
			"end": "\""
		},
		"single-strings": {
			"name": "string.quoted.single.lig",
			"begin": "'",
			"end": "'"
		},
		"line-comments": {
			"name": "comment.line.number-sign.lig",
			"begin": "#",
			"end": "$"
		},
		"inline-comments": {
			"name": "comment.line.percentage.lig",
			"begin": "##",
			"end": "##|$"
		},
		"block-comments": {
			"name": "comment.block.documentation.lig",
			"begin": "###",
			"end": "###"
		},
		"assign-clause": {
			"begin": "\\b(let|digit)\\b",
			"end": ";",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.lig"
				}
			},
			"patterns": [
				{
					"include": "#digits"
				},
				{
					"include": "#block-comments"
				},
				{
					"include": "#inline-comments"
				},
				{
					"include": "#line-comments"
				}
			]
		},
		"block": {
			"match": "\\b([_\\w][_\\w\\d]*|~)(\\[([_\\w][_\\w\\d]*)\\])",
			"captures": {
				"1": {
					"name": "entity.name.class.lig"
				}
			}
		},
		"configuration": {
			"begin": "\\{",
			"end": "\\}",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"include": "#single-strings"
				},
				{
					"include": "#block"
				},
				{
					"include": "#configuration"
				},
				{
					"include": "#digits"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#block-comments"
				},
				{
					"include": "#inline-comments"
				},
				{
					"include": "#line-comments"
				},
				{
					"include": "#matrices"
				},
				{
					"match": "\\b([_\\w][_\\w\\d]*)\\s*:",
					"captures": {
						"1": {
							"name": "entity.name.tag.lig"
						}
					}
				}
			]
		},
		"matrices": {
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{
					"include": "#block"
				},
				{
					"include": "#configuration"
				},
				{
					"include": "#digits"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#block-comments"
				},
				{
					"include": "#inline-comments"
				},
				{
					"include": "#line-comments"
				},
				{
					"include": "#matrices"
				}
			]
		},
		"routes": {
			"begin": "(route)\\s+([_\\w][_\\w\\d]*)\\s*\\(",
			"end": "\\)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.lig"
				},
				"2": {
					"name": "entity.name.function.lig"
				}
			},
			"patterns": [
				{
					"begin": "([_\\w][_\\w\\d]*)(:([_\\w][_\\w\\d]*))?=",
					"end": ",|;",
					"beginCaptures": {
						"1": {
							"name": "variable.parameter.lig"
						},
						"3": {
							"name": "storage.class.lig"
						}
					},
					"patterns": [
						{
							"include": "#block"
						},
						{
							"include": "#configuration"
						},
						{
							"include": "#digits"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#block-comments"
						},
						{
							"include": "#inline-comments"
						},
						{
							"include": "#line-comments"
						},
						{
							"include": "#matrices"
						}
					]
				},
				{
					"match": "([_\\w][_\\w\\d]*)\\s*(:([_\\w][_\\w\\d]*))?",
					"captures": {
						"1": {
							"name": "variable.parameter.lig"
						},
						"3": {
							"name": "storage.class.lig"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.lig"
}